<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
   http://www.springframework.org/schema/security
   http://www.springframework.org/schema/security/spring-security-3.2.xsd">

<!-- This is where we configure Spring-Security  -->
<security:http auto-config="true" use-expressions="true" access-denied-page="/error" >

    <security:intercept-url pattern="/login" access="permitAll"/>
    <security:intercept-url pattern="/index.jsp" access="permitAll"/>
    <security:intercept-url pattern="/publichome" access="permitAll"/>
    <security:intercept-url pattern="/**" access="hasRole('ROLE_USER')"/>

    <security:form-login
            login-page="/login"
            authentication-failure-url="/login?error=true"
            default-target-url="/loguser"/>

    <security:logout
            invalidate-session="true"
            logout-success-url="/"/>
    <!--logout-url="/logout"/>-->
    <security:remember-me key="key"/>

</security:http>

<!-- Declare an authentication-manager to use a custom userDetailsService -->
<security:authentication-manager>

    <security:authentication-provider ref="AuthenticationProviderImpl"/>

</security:authentication-manager>
<!--<security:authentication-manager>-->
<!--<security:authentication-provider user-service-ref="UserDetailsServiceImpl">-->
<!--</security:authentication-provider>-->
<!--</security:authentication-manager>-->

<!-- A custom service where Spring will retrieve users and their corresponding access levels  -->
<bean id="UserDetailsServiceImpl" class="pca.auth.UserDetailsServiceImpl"/>
<bean id="AuthenticationProviderImpl" class="pca.auth.AuthenticationProviderImpl"/>

</beans>